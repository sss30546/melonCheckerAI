#!/usr/bin/env python3
import os
import json
import streamlit as st
from groq import Groq
from dotenv import load_dotenv

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤ ENV
load_dotenv(".env")
GROQ_API_KEY = os.getenv("GROQ_API_KEY")
client = Groq(api_key=GROQ_API_KEY)

st.set_page_config(page_title="üçã Lemon Disease AI Bot", page_icon="üçã", layout="wide")

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏ä‡∏ï‡∏ö‡∏≠‡∏ï
def chatboot(question):
    system_prompt = """
‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡∏î‡πâ‡∏≤‡∏ô‡πÇ‡∏£‡∏Ñ‡∏û‡∏∑‡∏ä ‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞ "‡πÇ‡∏£‡∏Ñ‡πÉ‡∏ô‡πÄ‡∏•‡∏°‡∏≠‡∏ô (Lemon)"  
‡πÇ‡∏õ‡∏£‡∏î‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤ ‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏≥‡πÅ‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏•‡∏°‡∏≠‡∏ô‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏£‡∏Ñ‡πÉ‡∏î‡πÉ‡∏ô 3 ‡πÇ‡∏£‡∏Ñ‡∏´‡∏•‡∏±‡∏Å‡∏ô‡∏µ‡πâ  
‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏£‡∏∏‡∏õ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏©‡∏ï‡∏£‡∏Å‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢

**‡πÇ‡∏£‡∏Ñ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏à‡∏≥‡πÅ‡∏ô‡∏Å‡πÑ‡∏î‡πâ:**
1. **‡πÇ‡∏£‡∏Ñ‡πÅ‡∏Ñ‡∏á‡πÄ‡∏Å‡∏≠‡∏£‡πå (Citrus Canker)**  
   - ‡πÉ‡∏ö‡∏≠‡πà‡∏≠‡∏ô‡πÅ‡∏•‡∏∞‡∏ú‡∏•‡∏≠‡πà‡∏≠‡∏ô‡∏°‡∏µ‡∏à‡∏∏‡∏î‡∏ô‡∏π‡∏ô‡∏™‡∏µ‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏• ‡∏•‡πâ‡∏≠‡∏°‡∏î‡πâ‡∏ß‡∏¢‡∏ß‡∏á‡∏™‡∏µ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á  
   - ‡πÅ‡∏ú‡∏•‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏´‡∏¢‡∏≤‡∏ö ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏™‡πà‡∏≠‡∏á‡∏î‡∏π‡∏à‡∏≤‡∏Å‡∏î‡πâ‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÉ‡∏ö‡∏à‡∏∞‡∏ô‡∏π‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô  
   - ‡∏û‡∏ö‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á‡πÉ‡∏ö ‡∏Å‡∏¥‡πà‡∏á ‡πÅ‡∏•‡∏∞‡∏ú‡∏•  
   - ‡∏ú‡∏•‡∏°‡∏µ‡πÅ‡∏ú‡∏•‡∏™‡∏µ‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡πÄ‡∏Ç‡πâ‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏á‡∏Å‡∏•‡∏°  
   - ‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏: ‡πÅ‡∏ö‡∏Ñ‡∏ó‡∏µ‡πÄ‡∏£‡∏µ‡∏¢ *Xanthomonas citri*  
   - ‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£: ‡∏ï‡∏±‡∏î‡πÅ‡∏ï‡πà‡∏á‡∏Å‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏£‡∏Ñ, ‡πÉ‡∏ä‡πâ‡∏™‡∏≤‡∏£‡∏Ñ‡∏≠‡∏õ‡πÄ‡∏õ‡∏≠‡∏£‡πå, ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏ù‡∏ô‡∏™‡∏≤‡∏î

2. **‡πÇ‡∏£‡∏Ñ‡∏™‡πÅ‡∏Ñ‡∏ö (Citrus Scab)**  
   - ‡πÉ‡∏ö‡πÅ‡∏•‡∏∞‡∏ú‡∏•‡∏≠‡πà‡∏≠‡∏ô‡∏°‡∏µ‡∏ï‡∏∏‡πà‡∏°‡∏ô‡∏π‡∏ô‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡∏™‡∏∞‡πÄ‡∏Å‡πá‡∏î  
   - ‡πÅ‡∏ú‡∏•‡∏°‡∏µ‡∏™‡∏µ‡∏Ñ‡∏£‡∏µ‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏µ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á‡∏≠‡πà‡∏≠‡∏ô ‡∏ï‡πà‡∏≠‡∏°‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•  
   - ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÉ‡∏ö‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏à‡∏∏‡∏î‡∏ô‡∏π‡∏ô‡∏™‡∏µ‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏•‡πá‡∏Å  
   - ‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏: ‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡∏£‡∏≤ *Elsino√´ fawcetti*  
   - ‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£: ‡∏û‡πà‡∏ô‡∏™‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≥‡∏à‡∏±‡∏î‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡∏£‡∏≤ ‡πÄ‡∏ä‡πà‡∏ô ‡πÅ‡∏°‡∏ô‡πÇ‡∏Ñ‡πÄ‡∏ã‡∏ö ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Ñ‡∏≠‡∏õ‡πÄ‡∏õ‡∏≠‡∏£‡πå

3. **‡πÇ‡∏£‡∏Ñ‡πÅ‡∏≠‡∏ô‡πÅ‡∏ó‡∏£‡∏Ñ‡πÇ‡∏ô‡∏™ (Anthracnose)**  
   - ‡∏û‡∏ö‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡πÉ‡∏ö ‡∏Å‡∏¥‡πà‡∏á ‡πÅ‡∏•‡∏∞‡∏ú‡∏• ‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ú‡∏•‡πÅ‡∏Å‡πà  
   - ‡∏°‡∏µ‡∏à‡∏∏‡∏î‡∏ä‡πâ‡∏≥‡∏™‡∏µ‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡∏î‡∏≥‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏µ‡∏™‡πâ‡∏° ‡πÅ‡∏ú‡∏•‡πÅ‡∏´‡πâ‡∏áÂáã‡πÄ‡∏´‡∏µ‡πà‡∏¢‡∏ß  
   - ‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏: ‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡∏£‡∏≤ *Colletotrichum gloeosporioides*  
   - ‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£: ‡πÄ‡∏Å‡πá‡∏ö‡∏ú‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏£‡∏Ñ‡∏≠‡∏≠‡∏Å, ‡∏û‡πà‡∏ô‡∏™‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡∏£‡∏≤, ‡∏õ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏≤‡∏¢‡∏≠‡∏≤‡∏Å‡∏≤‡∏®

**‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö:**
‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô JSON ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ ‡∏ï‡∏≤‡∏°‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ô‡∏µ‡πâ:

{
  "disease": "‡πÇ‡∏£‡∏Ñ‡πÅ‡∏Ñ‡∏á‡πÄ‡∏Å‡∏≠‡∏£‡πå" ‡∏´‡∏£‡∏∑‡∏≠ "‡πÇ‡∏£‡∏Ñ‡∏™‡πÅ‡∏Ñ‡∏ö" ‡∏´‡∏£‡∏∑‡∏≠ "‡πÇ‡∏£‡∏Ñ‡πÅ‡∏≠‡∏ô‡πÅ‡∏ó‡∏£‡∏Ñ‡πÇ‡∏ô‡∏™" ‡∏´‡∏£‡∏∑‡∏≠ "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏∞‡∏ö‡∏∏‡πÑ‡∏î‡πâ",
  "‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏": "‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö",
  "‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏û‡∏ö": "‡∏™‡∏£‡∏∏‡∏õ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏´‡∏•‡∏±‡∏Å‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏¢",
  "‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô": "‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡∏©‡∏ï‡∏£‡∏Å‡∏£",
  "reason": "‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏ó‡∏µ‡πà‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏£‡∏Ñ‡∏ô‡∏±‡πâ‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏∞‡∏ö‡∏∏‡πÑ‡∏î‡πâ"
}
‡∏´‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠ ‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏ß‡πà‡∏≤ "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏∞‡∏ö‡∏∏‡πÑ‡∏î‡πâ" ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ß‡πà‡∏≤‡∏Ñ‡∏ß‡∏£‡∏ö‡∏≠‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏ä‡πà‡∏ô ‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏Ç‡∏≠‡∏á‡πÅ‡∏ú‡∏•, ‡∏™‡∏µ, ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏û‡∏ö, ‡∏Ø‡∏•‡∏Ø
"""
    response = client.chat.completions.create(
        model="llama-3.1-8b-instant",
        messages=[
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": question},
        ],
        temperature=0.3,
        max_tokens=1024,
    )
    return response.choices[0].message.content.strip()


# ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ö‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
def main():
    st.title("üçã ‡πÅ‡∏ä‡∏ï‡∏ö‡∏≠‡∏ï‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÇ‡∏£‡∏Ñ‡πÉ‡∏ô‡πÄ‡∏•‡∏°‡∏≠‡∏ô (AI Lemon Disease Bot)")
    st.subheader("‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏¢‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡πÄ‡∏•‡∏°‡∏≠‡∏ô ‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏´‡πâ AI ‡∏ä‡πà‡∏ß‡∏¢‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏£‡∏Ñ‡∏≠‡∏∞‡πÑ‡∏£")

    if "messages" not in st.session_state:
        st.session_state["messages"] = [
            {"role": "assistant", "content": "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏à‡πâ‡∏≤ üçã ‡∏â‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ä‡∏ï‡∏ö‡∏≠‡∏ï‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÇ‡∏£‡∏Ñ‡πÉ‡∏ô‡πÄ‡∏•‡∏°‡∏≠‡∏ô ‡πÄ‡∏ä‡πà‡∏ô ‡πÅ‡∏Ñ‡∏á‡πÄ‡∏Å‡∏≠‡∏£‡πå ‡∏™‡πÅ‡∏Ñ‡∏ö ‡πÅ‡∏•‡∏∞‡πÅ‡∏≠‡∏ô‡πÅ‡∏ó‡∏£‡∏Ñ‡πÇ‡∏ô‡∏™ ‡∏ö‡∏≠‡∏Å‡∏â‡∏±‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏ß‡πà‡∏≤‡∏û‡∏ö‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡∏ö‡πÑ‡∏´‡∏ô ‡πÄ‡∏ä‡πà‡∏ô '‡πÉ‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏∏‡∏î‡∏ô‡∏π‡∏ô‡∏™‡∏µ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á' ‡∏´‡∏£‡∏∑‡∏≠ '‡∏ú‡∏•‡∏°‡∏µ‡∏£‡∏≠‡∏¢‡∏î‡∏≥‡πÅ‡∏´‡πâ‡∏á' ‡πÅ‡∏•‡πâ‡∏ß‡∏â‡∏±‡∏ô‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÉ‡∏´‡πâ‡∏ô‡∏∞"}
        ]

    with st.form("chat_form"):
        query = st.text_input("üó£Ô∏è ‡∏Ñ‡∏∏‡∏ì:", placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡πÄ‡∏•‡∏°‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏ö ‡πÄ‡∏ä‡πà‡∏ô '‡πÉ‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏∏‡∏î‡∏ô‡∏π‡∏ô‡∏™‡∏µ‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏• ‡∏°‡∏µ‡∏ß‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á‡∏£‡∏≠‡∏ö‡πÜ'").strip()
        submitted = st.form_submit_button("üöÄ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°")

        if submitted and query:
            answer = chatboot(query)
            st.session_state["messages"].append({"role": "user", "content": query})
            st.session_state["messages"].append({"role": "assistant", "content": answer})
        elif submitted and not query:
            st.warning("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á")

    # ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÇ‡∏ï‡πâ‡∏ï‡∏≠‡∏ö
    for msg in st.session_state["messages"]:
        if msg["role"] == "user":
            st.markdown(f"**üßë‚Äçüåæ ‡∏Ñ‡∏∏‡∏ì:** {msg['content']}")
        else:
            try:
                data = json.loads(msg["content"])
                st.markdown("#### ü§ñ ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÇ‡∏£‡∏Ñ‡πÉ‡∏ô‡πÄ‡∏•‡∏°‡∏≠‡∏ô")
                col1, col2 = st.columns(2)
                col1.metric("‡πÇ‡∏£‡∏Ñ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ", data.get("disease", "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"))
                col1.metric("‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏", data.get("‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏", "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"))
                col2.metric("‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏û‡∏ö", data.get("‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏û‡∏ö", "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"))
                st.info(f"üß© ‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô: {data.get('‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏')}")
                st.success(f"üîç ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•: {data.get('reason', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏')}")
            except Exception:
                st.markdown(f"**ü§ñ ‡πÄ‡∏•‡∏°‡∏≠‡∏ô‡∏ö‡∏≠‡∏ï:** {msg['content']}")

    st.markdown("---")
    st.caption("üå± ‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏î‡∏¢‡∏ó‡∏µ‡∏° future lab | ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏ä‡∏ï‡∏ö‡∏≠‡∏ï‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÇ‡∏£‡∏Ñ‡πÉ‡∏ô‡πÄ‡∏•‡∏°‡∏≠‡∏ô (Citrus AI Expert)")

if __name__ == "__main__":
    main()
